<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>br.org.archipelago</groupId>
	<artifactId>nias</artifactId>
	<version>0.0.1-SNAPSHOT</version>


	<dependencies>
		<dependency>
			<groupId>br.org.archipelago</groupId>
			<artifactId>lombok</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<!-- Maven repositories -->
	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>central</id>
			<name>Maven Repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>jboss</id>
			<url>http://repository.jboss.org/nexus/content/groups/public-jboss/</url>
		</repository>
	</repositories>


	<profiles>
		<profile>
			<id>DESENV</id>
			<build>
				<finalName>NIAS</finalName>
				<resources>
					<resource>
						<directory> ${project.basedir}/src/resources/main</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
						</includes>
					</resource>
					<resource>
						<directory> ${project.basedir}/src/resources/test</directory>
						<includes>
							<include>**/*.xml</include>
							<include>**/*.properties</include>
							<include>**/*.sql</include>
							<include>**/*.xsd</include>
						</includes>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>ISO-8859-1</encoding>
				</configuration>
			</plugin>
		</plugins>
		<sourceDirectory>
      ${project.basedir}/src/java/main
    </sourceDirectory>
		<testSourceDirectory>
      ${project.basedir}/src/java/test
    </testSourceDirectory>
		<resources>
			<resource>
				<directory>
                   ${project.basedir}/src/resources/main
                 </directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>
                   ${project.basedir}/src/resources/test
                 </directory>
			</testResource>
		</testResources>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
					<docletArtifact>
						<groupId>org.umlgraph</groupId>
						<artifactId>umlgraph</artifactId>
						<version>5.6</version>
					</docletArtifact>
					<additionalparam>-views -all</additionalparam>
					<useStandardDocletOptions>true</useStandardDocletOptions>
				</configuration>
			</plugin>
			<!-- FindBugs - maven-findbugs-plugin Provides static analysis on source 
				files Plugin does not need to be run outside of report phase -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<configuration>
					<skip>${findbugs.skip}</skip>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
			<!-- Cobertura - maven-cobertura-plugin Provides code coverage during 
				Unit Test (test) phase. NOTE: Must be run during build AND during reporting 
				phases -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<configuration>
					<skip>${cobertura.skip}</skip>
				</configuration>
			</plugin>
			<!-- PMD and CPD - maven-pmd-plugin Provides static analysis (PMD) and 
				code duplication/cut-copy-paste detection for artifact -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<reportSets>
					<reportSet>
						<id>integration-tests</id>
						<reports>
							<report>report-only</report>
							<report>failsafe-report-only</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<name>Nias</name>

	<developers>
		<developer>
			<id>alvesfc</id>
			<name>Marcos Alves Cunha</name>
			<email>m.alvesfc@gmail.com</email>
			<!-- <url>http://eric.propellors.net</url> <organization>Codehaus</organization> 
				<organizationUrl>http://mojo.codehaus.org</organizationUrl> -->
			<roles>
				<role>Administrator</role>
				<role>developer</role>
			</roles>
			<timezone>+3</timezone>
			<!-- <properties> <picUrl>http://tinyurl.com/prv4t</picUrl> </properties> -->
		</developer>
	</developers>

	<contributors>
		<contributor>
			<name>Contributor </name>
			<email>some.name@gmail.com</email>
			<url>http://noellemarie.com</url>
			<organization>Noelle Marie</organization>
			<organizationUrl>http://noellemarie.com</organizationUrl>
			<roles>
				<role>tester</role>
			</roles>
			<timezone>+3</timezone>
			<properties>
				<gtalk>some.name@gmail.com</gtalk>
				<skype>contributor</skype>
			</properties>
		</contributor>
	</contributors>

	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>

	<issueManagement>
		<system>Bugzilla</system>
		<url>http://127.0.0.1/bugzilla/</url>
	</issueManagement>

	<description>Definir uma solução simples para realizar a leitura do conteúdo do arquivo properties de acordo com o idioma para que possa ser reutilizada em outras aplicações com o mínimo de esforço por parte do desenvolvedor.</description>


</project>
